@model Jellow2._0.ViewModels.ProjectAndFreelancerViewModel

@{
    ViewBag.Title = "AcceptProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" type="text/css" href="~/Content/general-styling.css"/>
<link rel="stylesheet" type="text/css" href="~/Content/home-page.css" />
<h2>AcceptProject</h2>

<div>
    <h4>Project</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.project.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.project.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.project.Experience)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.Experience)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.project.Budget)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.Budget)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.project.DueDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.DueDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.project.SkillRequirement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.project.SkillRequirement)
        </dd>
        @if (Model.project.CompanyID.HasValue)
        {
            <dt>
                Company @Html.DisplayNameFor(model => model.project.Company.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.project.Company.Name)
            </dd>
        }
        @if (Model.project.ConsumerID.HasValue)
        {
            <dt>
                Private @Html.DisplayNameFor(model => model.project.Consumer.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.project.Consumer.Name)
            </dd>
        }
    </dl>
</div>
<hr />

<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Project</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.project.ProjectID)

            <div class="form-group">
                @Html.LabelFor(model => model.project.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.Experience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.Experience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.Budget, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.Budget, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.DueDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.SkillRequirement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.project.SkillRequirement, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.project.SkillRequirement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.project.FreelancerID, "FreelancerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.project.FreelancerID, Model.FreelancerIDs, "--Select--", new { @style = "background-color: #1f2833;" })
                    @Html.ValidationMessageFor(model => model.project.FreelancerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<div>
    <p>
        @Html.ActionLink("Back to List", "Overview", null, new { @class = "basic-hyperlink" })
    </p>
</div>

