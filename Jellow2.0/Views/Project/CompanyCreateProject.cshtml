@model Jellow2._0.Database.Project

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<link rel="stylesheet" type="text/css" href="~/Content/general-styling.css" />

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create Project</title>
</head>
<body>
@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Project</h4>
            <h5>@ViewBag.CompanyID</h5>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SkillRequirement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SkillRequirement, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkillRequirement, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FreelancerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control text-box single-line" type="text" id="FreelancerID" value="null" placeholder="n/a" readonly />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConsumerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control text-box single-line" type="text" id="ConsumerID" value="null" placeholder="n/a" readonly />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Company", "Index", "Company", null, new { @class = "basic-hyperlink" })
    </div>
</body>
</html>